name: Produce character sheet
on: [ push, pull_request ]
env:
  BUILD_SCRIPT: compile.py
  CHECKER_SCRIPT: checker.py
  DOC_V7: manuel_feuille_perso_simv7

jobs:
  create_release:
    name: Create a release if needed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the event commit
        uses: actions/checkout@v2
      - name: Create release
        if: contains(github.ref, '/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
          body_path: next_release_description.md

  produce_doc:
    needs: create_release
    name: Compile and upload documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the event commit
        uses: actions/checkout@v2

      - name: Compile documentation
        run: |
          git fetch --prune --unshallow --tags
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
          mkdir -p ~/.local/share
          mv doc/fonts/ ~/.local/share/fonts/
          fc-cache -f -v
          cd doc/images && python3 create_pictos.py && cd -
          cd doc && python3 -m rst2pdf.createpdf ${{ env.DOC_V7 }}.txt -v -s sim_styles.txt -e preprocess --use-floating-images --real-footnotes -o ${{ env.DOC_V7 }}.pdf && cd -

      - name: Upload v7 documentation
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DOC_V7 }}.pdf
          path: doc/${{ env.DOC_V7 }}.pdf

      - name: Get release
        if: contains(github.ref, '/tags/')
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload v7 documentation in release assets
        if: contains(github.ref, '/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_content_type: application/pdf
          asset_name: ${{ env.DOC_V7 }}.pdf
          asset_path: doc/${{ env.DOC_V7 }}.pdf

  produce_character_sheet:
    needs: create_release
    name: Produce character sheet
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:  # To build a new sheet, only need to add them in this list
          # NPC grid
          - name: simulacres_npc_grid.html
            build_parameters: --localisation --base-template "base_npc_grid.html" --plugin plugins/plugin_export_to_server.html

          # Version 7
          - name: simulacres_v7_fiche_perso.html
            build_parameters: ""
          - name: simulacres_v7_localisation_fiche_perso.html
            build_parameters: --localisation
          - name: simulacres_v7_localisation_deux_armes_fiche_perso.html
            build_parameters: --localisation --dual-wielding --tomte-magic --warrior-powers

          # Version 8
          - name: simulacres_v8_fiche_perso.html
            build_parameters: --version 8
          - name: simulacres_v8_fiche_perso_minimale.html
            build_parameters: --version 8 --universe "Autre"
          - name: simulacres_v8_fiche_perso_minimale_decouverte.html
            build_parameters: --version 8 --universe "Autre" --discovery --plugin plugins/plugin_generic_world.html
          - name: simulacres_v8_fiche_perso_minimale_decouverte_intermediaire.html
            build_parameters: --version 8 --universe "Autre" --intermediate-discovery --plugin plugins/plugin_generic_world.html
          - name: simulacres_v8_fiche_perso_capitaine_vaudou.html
            build_parameters: --version 8 --universe "Capitaine Vaudou"

          # Version 8 with 4x4 matrices
          - name: simulacres_v8_fiche_perso_4x4.html
            build_parameters: --version 8 --matrix-4x4
          - name: simulacres_v8_fiche_perso_minimale_4x4.html
            build_parameters: --version 8 --matrix-4x4 --universe "Autre"
          - name: simulacres_v8_fiche_perso_minimale_decouverte_4x4.html
            build_parameters: --version 8 --matrix-4x4 --universe "Autre" --discovery --plugin plugins/plugin_generic_world.html
          - name: simulacres_v8_fiche_perso_minimale_decouverte_intermediaire_4x4.html
            build_parameters: --version 8 --matrix-4x4 --universe "Autre" --intermediate-discovery --plugin plugins/plugin_generic_world.html
          - name: simulacres_v8_fiche_perso_capitaine_vaudou_4x4.html
            build_parameters: --version 8 --matrix-4x4 --universe "Capitaine Vaudou"

    steps:
      - name: Checkout the event commit
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          # Needed to fetch tags
          git fetch --prune --unshallow --tags

          # Prepare build
          mkdir -p target

          # Install python requirements
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

          # Install google chrome
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb

      - name: Compile Jinja template
        run: |
          python3 ${{ env.BUILD_SCRIPT }} target/${{ matrix.name }} ${{ matrix.build_parameters }}

      - name: Check sheet validity
        run: python3 ${{ env.CHECKER_SCRIPT }} target/${{ matrix.name }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload '${{ matrix.name }}'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: target/${{ matrix.name }}

      - name: Get release
        if: contains(github.ref, '/tags/')
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload '${{ matrix.name }}' in release assets
        if: contains(github.ref, '/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_content_type: text/html
          asset_name: ${{ matrix.name }}
          asset_path: target/${{ matrix.name }}
